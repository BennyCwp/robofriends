{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","id","name","email","className","src","alt","CardList","robotsArray","map","user","SearchBox","handleChange","type","placeholder","onChange","Scroll","props","style","overflowY","height","border","children","ErrorBoundary","state","errorCaught","error","info","this","setState","React","Component","App","inputChange","e","searchInput","target","value","robots","fetch","then","response","json","users","filteredArray","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAYeA,EAVF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACxB,OACE,sBAAKC,UAAU,sDAAf,UACE,qBAAKC,IAAG,+BAA0BJ,EAA1B,iBAA6CK,IAAI,UACzD,6BAAKJ,IACL,+BAAOC,QCaEI,EAjBE,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAClB,OACE,8BACGA,EAAYC,KAAI,SAACC,GAChB,OACE,cAAC,EAAD,CAEET,GAAIS,EAAKT,GACTC,KAAMQ,EAAKR,KACXC,MAAOO,EAAKP,OAHPO,EAAKT,UCMPU,EAbG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACnB,OACE,qBAAKR,UAAU,MAAf,SACE,uBACEA,UAAU,mCACVS,KAAK,SACLC,YAAY,uBACZC,SAAUH,OCGHI,EAVA,SAACC,GACd,OACE,qBACEC,MAAO,CAAEC,UAAW,SAAUC,OAAQ,IAAKC,OAAQ,mBADrD,SAGGJ,EAAMK,YCiBEC,E,kDArBb,WAAYN,GAAQ,IAAD,8BACjB,cAAMA,IACDO,MAAQ,CACXC,aAAa,GAHE,E,qDAOnB,SAAkBC,EAAOC,GACvBC,KAAKC,SAAS,CACZJ,aAAa,M,oBAIjB,WACE,OAAIG,KAAKJ,MAAMC,YACN,gEAEFG,KAAKX,MAAMK,a,GAlBMQ,IAAMC,WCoDnBC,G,wDA9Cb,aAAe,IAAD,8BACZ,gBAkBFC,YAAc,SAACC,GACb,EAAKL,SAAS,CACZM,YAAaD,EAAEE,OAAOC,SAnBxB,EAAKb,MAAQ,CACXc,OAAQ,GACRH,YAAa,IAJH,E,qDAOd,WAAqB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MAAK,SAACG,GACL,EAAKd,SAAS,CACZS,OAAQK,S,oBAWhB,WACE,MAAgCf,KAAKJ,MAA7Bc,EAAR,EAAQA,OAAQH,EAAhB,EAAgBA,YACVS,EAAgBN,EAAOO,QAAO,SAACC,GACnC,OAAOA,EAAM5C,KAAK6C,cAAcC,SAASb,EAAYY,kBAEvD,OAAyB,IAAlBT,EAAOW,OACZ,yCAEA,sBAAK7C,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWQ,aAAcgB,KAAKK,cAC9B,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAUzB,YAAaoC,e,GAvCjBd,IAAMC,YCKTmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a28e8b6b.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Card = ({ id, name, email }) => {\r\n  return (\r\n    <div className=\"dib shadow-5 bg-light-green grow pa3 ma2 br3 bw2 tc\">\r\n      <img src={`https://robohash.org/${id}?size=300x300`} alt=\"robot\" />\r\n      <h2>{name}</h2>\r\n      <span>{email}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport Card from \"./Card\";\r\n\r\nconst CardList = ({ robotsArray }) => {\r\n  return (\r\n    <div>\r\n      {robotsArray.map((user) => {\r\n        return (\r\n          <Card\r\n            key={user.id}\r\n            id={user.id}\r\n            name={user.name}\r\n            email={user.email}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardList;\r\n","import React from \"react\";\r\n\r\nconst SearchBox = ({ handleChange }) => {\r\n  return (\r\n    <div className=\"pa2\">\r\n      <input\r\n        className=\"pa3 ba b--green bg-lightest-blue\"\r\n        type=\"search\"\r\n        placeholder=\"search robot friends\"\r\n        onChange={handleChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React from \"react\";\r\n\r\nconst Scroll = (props) => {\r\n  return (\r\n    <div\r\n      style={{ overflowY: \"scroll\", height: 720, border: \"3px solid black\" }}\r\n    >\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Scroll;\r\n","import React from \"react\";\r\n\r\nclass ErrorBoundary extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      errorCaught: false,\r\n    };\r\n  }\r\n\r\n  componentDidCatch(error, info) {\r\n    this.setState({\r\n      errorCaught: true,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.errorCaught) {\r\n      return <h1>Ooops there is something wrong</h1>;\r\n    }\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import React from \"react\";\r\nimport CardList from \"../components/CardList\";\r\nimport SearchBox from \"../components/SearchBox\";\r\nimport Scroll from \"../components/Scroll\";\r\nimport ErrorBoundary from \"../components/ErrorBoundary\";\r\nimport \"./App.css\";\r\n\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      robots: [],\r\n      searchInput: \"\",\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((users) => {\r\n        this.setState({\r\n          robots: users,\r\n        });\r\n      });\r\n  }\r\n\r\n  inputChange = (e) => {\r\n    this.setState({\r\n      searchInput: e.target.value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { robots, searchInput } = this.state;\r\n    const filteredArray = robots.filter((robot) => {\r\n      return robot.name.toLowerCase().includes(searchInput.toLowerCase());\r\n    });\r\n    return robots.length === 0 ? (\r\n      <h1>Loading</h1>\r\n    ) : (\r\n      <div className=\"tc\">\r\n        <h1 className=\"f1\">Robofriends</h1>\r\n        <SearchBox handleChange={this.inputChange} />\r\n        <Scroll>\r\n          <ErrorBoundary>\r\n            <CardList robotsArray={filteredArray} />\r\n          </ErrorBoundary>\r\n        </Scroll>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./containers/App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport \"tachyons\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}